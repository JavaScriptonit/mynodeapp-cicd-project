image: node:17-alpine

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

variables:
  image_repository: doker.io/my-docker-id/myapp
  image_tag: v1.0

run_unit_tests:
  stage: test
  before_script:
    - echo "Preparing test data..."
  script:
    - echo "Running unit tests for $MICRO_SERVICE_NAME ..."
  after_script:
    - echo "Cleaning up temporary files..."

run_lint_tests:
  stage: test
  before_script:
    - echo "Preparing test data..."
    - chmod +x prepare-tests.sh
    - ./prepare-tests.sh
  script:
    - echo "Running lint tests for $MICRO_SERVICE_NAME ..."
  after_script:
    - echo "Cleaning up temporary files..."
    - rm -r test_data
    - ls

build_image:
  only:
    - main
  stage: build
  script:
    - echo "Building the Docker image..."
    - echo "Tagging the Docker image $image_repository:$image_tag"

push_image:
  only:
    - main
  stage: build
  needs:
    - build_image
  script:
    - echo "Logging into Docker registry..."
    - echo "Pushing Docker image $image_repository:$image_tag to registry..."

deploy_image:
  only:
    - main
  stage: deploy
  script:
    - echo "Deploying new Docker image $image_repository:$image_tag to $DEPLOYMENT_ENVIRONMENT using the following configuration file - $PROPERTIES_FILE ..."
    - cat $PROPERTIES_FILE